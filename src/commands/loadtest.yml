description: >
  performs a loadtest using Necocortix Last-Mile Loadtest service (in the current container)
parameters:
  targetHostUrl:
    type: string
    description: "url of the host to target as victim"
  nWorkers:
    type: integer
    default: 1
    description: "the # of worker instances to launch (or zero for all available)"
  susTime:
    type: integer
    default: 10
    description: "how much time to sustain the test after startup (in seconds)"
  alpha:
    type: boolean
    default: false
    description: "pass true to use alpha version of orb code"
steps:
  - when:
      condition: << parameters.alpha >>
      steps:
        - run:
            name: fetching code (alpha)
            command: wget https://raw.githubusercontent.com/neocortix/ncsorb2/Alpha/runRemoteLoadtest.py
  - unless:
      condition: << parameters.alpha >>
      steps:
        - run:
            name: fetching code (master)
            command: wget https://raw.githubusercontent.com/neocortix/ncsorb2/master/runRemoteLoadtest.py
  - run:
      name: loadtesting
      command: >-
        python3 ./runRemoteLoadtest.py << parameters.targetHostUrl >>
        --nWorkers << parameters.nWorkers >> --susTime << parameters.susTime >>
        --jsonOut data/loadtest_out.json --masterUrl  https://load-test.cloud.neocortix.com/
        --authToken $NCS_AUTH_TOKEN
  - store_artifacts:
      path: data
  #- store_test_results:
  #    path: data/test-results
